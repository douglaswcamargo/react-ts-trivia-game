{"version":3,"sources":["store/ducks/questions/types.ts","store/ducks/questions/index.ts","store/ducks/answers/types.ts","store/ducks/answers/index.ts","store/ducks/rootReducer.ts","services/questions.tsx","store/ducks/questions/actions.ts","store/ducks/questions/sagas.ts","store/ducks/rootSaga.ts","store/index.ts","helpers/index.tsx","i18n/index.ts","i18n/en_US.ts","i18n/pt_BR.ts","config/GlobalStyle.tsx","config/themes.ts","contexts/AppThemeProvider.tsx","hooks/useToggleTheme.tsx","components/Card/index.tsx","components/HandheldButtonGroup/style.tsx","components/Switch/style.tsx","components/Switch/index.tsx","components/Group/style.tsx","components/Group/index.tsx","components/QuizOptions/style.tsx","components/QuizOptions/index.tsx","components/Button/style.tsx","components/Button/index.tsx","components/HandheldButtonGroup/index.tsx","components/HandheldScreen/index.tsx","components/HandheldLink/styles.tsx","components/HandheldLink/index.tsx","containers/QuizContainer/index.tsx","hooks/useToggleLanguage.tsx","components/Title/index.tsx","components/Hint/index.tsx","components/Text/index.tsx","pages/QuizHome/index.tsx","components/QuizQuestion/style.tsx","components/QuizQuestion/index.tsx","components/Spinner/index.tsx","containers/QuizQuestionsContainer/index.tsx","store/ducks/answers/actions.ts","pages/QuizQuestions/index.tsx","pages/QuizResults/style.tsx","pages/QuizResults/index.tsx","pages/NotFound/index.tsx","routes/routes.tsx","App.tsx","index.tsx"],"names":["QuestionsTypes","AnswersTypes","INITIAL_STATE","data","error","loading","reducer","state","action","type","FETCH_QUESTIONS","FETCH_QUESTIONS_SUCCESS","payload","FETCH_QUESTIONS_ERROR","RESET_ANSWERS","ANSWER_QUESTION","combineReducers","questions","answers","axios","create","baseURL","fetchQuestionsError","fetch","call","get","response","response_code","put","results","rootSaga","all","takeLatest","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","applyMiddleware","run","getLocalStorageItem","key","window","localStorage","getItem","setLocalStorageItem","value","setItem","resources","en_US","translation","general","notFound","quiz","homeTitle","homeSubTitle","homeDescription","homeChallenge","homeButtonStart","quizButtonTrue","quizButtonFalse","quizHintA","quizHintB","quizCounterPreposition","resultsTitle","resultsButtonRetry","resultsHint","pt_BR","initialLanguage","i18n","use","initReactI18next","init","interpolation","escapeValue","lng","GlobalStyles","createGlobalStyle","props","theme","colors","bodyBackground","fonts","primary","light","success","text","sectionBackground","handheldScreen","handheldBackground","handheldBackgroundSecondary","handheldText","handheldPrimary","handheldSecondary","handheldSecondaryShadow","handheldButton","handheldButtonShadow","secondary","dark","AppThemeContext","createContext","initialTheme","AppThemeProvider","children","useState","selectedTheme","setSelectedTheme","useEffect","useToggleTheme","themes","Provider","GlobalStyle","Card","styled","div","ButtonContainer","ButtonActionsWrapper","ButtonOptionsWrapper","Container","button","attrs","Switcher","switched","css","Label","span","Switch","onChange","labelLeft","labelRight","disabled","onClick","vertical","alignItems","Group","QuizOptions","language","onChangeTheme","onChangeLanguage","handheldtext","Button","title","HandheldButtonGroup","onClickA","onClickB","HandheldScreen","Stripes","HandheldLink","href","target","rel","QuizContainer","setLanguage","useTranslation","toggleLanguage","isPt","a","selectedLang","changeLanguage","useToggleLanguage","useContext","Title","h1","hint","keyframes","Hint","p","blink","Text","QuizHome","t","history","useHistory","push","process","Question","Counter","QuizQuestion","question","currentQuestion","totalQuestions","he","decode","spinner","Spinner","QuizQuestionContainer","useSelector","setCurrentQuestion","dispatch","useDispatch","handleAnswer","answer","answerObj","correct","correct_answer","answerQuestion","length","as","category","Quiz","Wrapper","List","ul","ListItem","li","Icon","QuestionText","Score","QuizResults","correctAnswers","filter","to","handleClick","map","Routes","exact","path","component","QuizQuestions","NotFound","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.335e7a7c.chunk.js","sourcesContent":["export enum QuestionsTypes {\n  FETCH_QUESTIONS = '@questions/FETCH_QUESTIONS',\n  FETCH_QUESTIONS_SUCCESS = '@questions/FETCH_QUESTIONS_SUCCESS',\n  FETCH_QUESTIONS_ERROR = '@questions/FETCH_QUESTIONS_ERROR'\n}\n\nexport interface Question {\n  category: string\n  type: string\n  difficulty: string\n  question: string\n  correct_answer: string\n  incorrect_answers: string[]\n}\n\nexport interface QuestionsState {\n  readonly data: Question[]\n  readonly loading: boolean\n  readonly error: boolean\n}\n","import { Reducer } from 'redux'\nimport { QuestionsTypes, QuestionsState } from './types'\n\nconst INITIAL_STATE: QuestionsState = {\n  data: [],\n  error: false,\n  loading: true\n}\n\n// eslint-disable-next-line @typescript-eslint/default-param-last\nconst reducer: Reducer<QuestionsState> = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case QuestionsTypes.FETCH_QUESTIONS:\n      return {\n        ...state,\n        loading: true,\n        error: false\n      }\n    case QuestionsTypes.FETCH_QUESTIONS_SUCCESS:\n      return {\n        ...action.payload,\n        loading: false,\n        error: false\n      }\n    case QuestionsTypes.FETCH_QUESTIONS_ERROR:\n      return {\n        ...state,\n        loading: false,\n        error: true\n      }\n    default:\n      return state\n  }\n}\n\nexport default reducer\n","export enum AnswersTypes {\n  RESET_ANSWERS = '@answers/RESET_ANSWERS',\n  ANSWER_QUESTION = '@answers/ANSWER_QUESTION'\n}\n\nexport interface Answer {\n  question: string\n  correct: boolean\n}\n\nexport interface AnswersState {\n  readonly data: Answer[]\n}\n","import { Reducer } from 'redux'\nimport { AnswersTypes, AnswersState } from './types'\n\nconst INITIAL_STATE: AnswersState = {\n  data: []\n}\n\n// eslint-disable-next-line @typescript-eslint/default-param-last\nconst reducer: Reducer<AnswersState> = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case AnswersTypes.RESET_ANSWERS:\n      return {\n        data: []\n      }\n    case AnswersTypes.ANSWER_QUESTION:\n      return {\n        data: [...state.data, action.payload]\n      }\n    default:\n      return state\n  }\n}\n\nexport default reducer\n","import { combineReducers } from 'redux'\nimport questions from './questions'\nimport answers from './answers'\n\nexport default combineReducers({\n  questions,\n  answers\n})\n","import axios from 'axios'\n\nconst questions = axios.create({\n  baseURL: 'https://opentdb.com/api.php?amount=10&difficulty=hard&type=boolean'\n})\n\nexport default questions\n","import { action } from 'typesafe-actions'\nimport { Question, QuestionsTypes } from './types'\n\nexport const fetchQuestions = () => {\n  return action(QuestionsTypes.FETCH_QUESTIONS)\n}\n\nexport const fetchQuestionsSuccess = (data: Question[]) => {\n  return action(QuestionsTypes.FETCH_QUESTIONS_SUCCESS, { data })\n}\n\nexport const fetchQuestionsError = () => {\n  return action(QuestionsTypes.FETCH_QUESTIONS_ERROR)\n}\n","import { call, put } from 'redux-saga/effects'\nimport questions from '../../../services/questions'\nimport { fetchQuestionsSuccess, fetchQuestionsError } from './actions'\n\nexport function * fetch () {\n  try {\n    const response = yield call(questions.get, '')\n    if (response.data?.response_code !== 0) {\n      yield put(fetchQuestionsError())\n    }\n\n    yield put(fetchQuestionsSuccess(response.data.results))\n  } catch (err) {\n    yield put(fetchQuestionsError())\n  }\n}\n","import { all, takeLatest } from 'redux-saga/effects'\nimport { QuestionsTypes } from './questions/types'\nimport { fetch } from './questions/sagas'\n\nfunction* rootSaga () {\n  return yield all([takeLatest(QuestionsTypes.FETCH_QUESTIONS, fetch)])\n}\n\nexport default rootSaga\n","import { createStore, applyMiddleware, Store } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\nimport rootReducer from './ducks/rootReducer'\nimport rootSaga from './ducks/rootSaga'\nimport { AppState } from './types'\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst store: Store<AppState> = createStore(rootReducer, applyMiddleware(sagaMiddleware))\n\nsagaMiddleware.run(rootSaga)\n\nexport default store\n","export const getLocalStorageItem = (key: string) => {\n  return window.localStorage.getItem(key)\n}\n\nexport const setLocalStorageItem = (key: string, value: string) => {\n  return window.localStorage.setItem(key, value)\n}\n","import i18n from 'i18next'\nimport { initReactI18next } from 'react-i18next'\nimport en_US from './en_US'\nimport pt_BR from './pt_BR'\nimport { getLocalStorageItem } from '../helpers'\n\nconst resources = {\n  en_US: { translation: en_US },\n  pt_BR: { translation: pt_BR }\n}\n\nconst initialLanguage = getLocalStorageItem('quizLanguage') ?? 'en_US'\n\ni18n\n  .use(initReactI18next)\n  .init({\n    resources,\n    interpolation: {\n      escapeValue: false\n    },\n    lng: initialLanguage\n  })\n\nexport default i18n\n","export default {\n  general: {\n    loading: 'Loading...',\n    notFound: 'Page not found.'\n  },\n  quiz: {\n    homeTitle: 'Trivia Challenge',\n    homeSubTitle: 'Welcome!',\n    homeDescription: 'You will be presented with 10 True or False questions',\n    homeChallenge: 'Can you score 100%?',\n    homeButtonStart: 'Press (A) or (B) to start!',\n    quizButtonTrue: 'True',\n    quizButtonFalse: 'False',\n    quizHintA: '(A) True',\n    quizHintB: '(B) False',\n    quizCounterPreposition: 'of',\n    resultsTitle: 'You scored',\n    resultsButtonRetry: 'Play Again',\n    resultsHint: 'Press (A) or (B) to try again'\n  }\n}\n","export default {\n  general: {\n    loading: 'Carregando...',\n    notFound: 'Página não encontrada.'\n  },\n  quiz: {\n    homeTitle: 'Desafio de Trivia',\n    homeSubTitle: 'Bem-vindo(a)!',\n    homeDescription: 'São 10 questões que você deve responder com Verdadeiro ou Falso',\n    homeChallenge: 'Você consegue acertar 100%?',\n    homeButtonStart: 'Pressione (A) ou (B) para iniciar!',\n    quizButtonTrue: 'Verdadeiro',\n    quizButtonFalse: 'Falso',\n    quizHintA: '(A) Verdadeiro',\n    quizHintB: '(B) Falso',\n    quizCounterPreposition: 'de',\n    resultsTitle: 'Resultado',\n    resultsButtonRetry: 'Jogar Novamente',\n    resultsHint: 'Pressione (A) ou (B) para jogar novamente'\n  }\n}\n","import { createGlobalStyle } from 'styled-components'\nimport { CustomTheme } from './types'\n\ninterface Props {\n  theme: CustomTheme\n}\n\nconst GlobalStyles = createGlobalStyle<Props>`\n  *,\n  *::after,\n  *::before {\n    box-sizing: border-box;\n  }\n  body {\n    background-color: ${(props) => props.theme.colors.bodyBackground};\n    display: flex;\n    align-items: center;\n    font-family: ${(props) => props.theme.fonts.primary};\n    justify-content: center;\n    text-align: center;\n  }\n`\n\nexport default GlobalStyles\n","const light = {\n  colors: {\n    primary: '#44a9ff',\n    success: '#306230',\n    error: '#7a1c4b',\n    text: '#2d3956',\n    bodyBackground: '#f0f0f0',\n    sectionBackground: '#e0e0e0',\n    handheldScreen: '#bdae58',\n    handheldBackground: '#cec9cc',\n    handheldBackgroundSecondary: '#908a99',\n    handheldText: '#211a21',\n    handheldPrimary: '#b5b6e4',\n    handheldSecondary: '#4f43ae',\n    handheldSecondaryShadow: '#352d75',\n    handheldButton: '#8e1e50',\n    handheldButtonShadow: '#6e173e'\n  },\n  fonts: {\n    primary: '\\'Helvetica Now\\', Helvetica, Arial, sans-serif',\n    secondary: '\\'Press Start 2P\\', cursive'\n  }\n}\n\nconst dark = {\n  colors: {\n    primary: '#44a9ff',\n    success: '#a1ef8c',\n    error: '#ab4646',\n    text: '#e2f3e4',\n    bodyBackground: '#161616',\n    handheldScreen: '#332c50',\n    handheldBackground: '#3b3639',\n    handheldBackgroundSecondary: '#312c2f',\n    handheldText: '#e2f3e4',\n    handheldPrimary: '#cf2c74',\n    handheldSecondary: '#8e1e50',\n    handheldSecondaryShadow: '#6e173e',\n    handheldButton: '#4f43ae',\n    handheldButtonShadow: '#352d75'\n  },\n  fonts: {\n    primary: '\\'Helvetica Now\\', Helvetica, Arial, sans-serif',\n    secondary: '\\'Press Start 2P\\', cursive'\n  }\n}\n\nexport { light, dark }\n","import React, { createContext } from 'react'\nimport { ThemeProvider } from 'styled-components'\nimport GlobalStyles from '../config/GlobalStyle'\nimport { dark, light } from '../config/themes'\nimport { getLocalStorageItem } from '../helpers'\nimport { AppThemeContextType, AppThemeProviderProps, Themes } from './types'\nimport useToggleTheme from '../hooks/useToggleTheme'\n\nexport const AppThemeContext = createContext({} as AppThemeContextType)\n\nconst initialTheme = getLocalStorageItem('quizTheme') ?? 'light'\n\nconst AppThemeProvider = ({ children }: AppThemeProviderProps) => {\n  const [selectedTheme, setSelectedTheme] = useToggleTheme(initialTheme)\n  const themes: Themes = { dark, light }\n\n  return (\n    <AppThemeContext.Provider value={{ selectedTheme, setSelectedTheme }}>\n      <ThemeProvider theme={themes[selectedTheme as keyof Themes]}>\n        <GlobalStyles />\n        {children}\n      </ThemeProvider>\n    </AppThemeContext.Provider>\n  )\n}\n\nexport default AppThemeProvider\n","import { useEffect, useState } from 'react'\nimport { setLocalStorageItem } from '../helpers'\n\nexport default function useToggleTheme (initialTheme: string) {\n  const [selectedTheme, setSelectedTheme] = useState(initialTheme)\n  const toggleTheme = () => setSelectedTheme(selectedTheme === 'light' ? 'dark' : 'light')\n\n  useEffect(() => {\n    setLocalStorageItem('quizTheme', selectedTheme)\n  }, [selectedTheme])\n\n  return [selectedTheme, toggleTheme] as const\n}\n","import styled from 'styled-components'\n\nconst Card = styled.div`\n    display: flex;\n    flex-direction: column;\n    padding: 20px;\n    height: 100%;\n    min-height: 560px;\n    width: 360px;\n    background-color: ${(props) => props.theme.colors.handheldBackground};\n    box-shadow: 5px 5px ${(props) => props.theme.colors.handheldBackgroundSecondary};\n    border-radius: 10px 10px 60px 10px;\n    margin-bottom: 2rem;\n`\n\nexport default Card\n","import styled from 'styled-components'\n\nexport const ButtonContainer = styled.div`\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n`\n\nexport const ButtonActionsWrapper = styled.div`\n    transform: rotate(-11deg);\n    height: 76px;\n    width: 50%;\n    display: flex;\n    justify-content: space-between;\n    background-color: ${(props) => props.theme.colors.handheldBackgroundSecondary};\n    padding: 12px;\n    border-radius: 30px;\n    box-shadow: inset 1px 1px rgba(0,0,0,0.06);\n    margin-bottom: 1rem;\n`\n\nexport const ButtonOptionsWrapper = styled.div`\n    transform: rotate(-11deg);\n    height: 76px;\n    width: 40%;\n    display: flex;\n    justify-content: space-between;\n    padding: 12px;\n    border-radius: 30px;\n    margin-bottom: 1rem;\n`\n","import styled, { css } from 'styled-components'\nimport { SwitcherProps } from './types'\n\nexport const Container = styled.button.attrs({\n  type: 'button'\n})`\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  background-color: transparent;\n  border: none;\n  padding: 0;\n`\n\nexport const Switcher = styled.div<SwitcherProps>`\n  width: 40px;\n  height: 21px;\n  background-color: rgba(0,0,0,0.08);\n  box-shadow: inset 2px 2px rgba(0,0,0,0.3);\n  border-radius: 100px;\n  margin-right: 0.2rem;\n  margin-left: 0.2rem;\n  position: relative;\n  flex-shrink: 0;\n\n  &::after {\n    content: \" \";\n    position: absolute;\n    width: 20px;\n    height: 20px;\n    border-radius: 100%;\n    background-color: ${(props) => props.theme.colors.handheldPrimary};\n    box-shadow: 0px 1px 0px ${(props) => props.theme.colors.handheldSecondary};\n    left: 0px;\n    top: 0px;\n    box-sizing: border-box;\n    transition: all 0.2s ease;\n    ${(props) => props.switched && css`\n      border-color: transparent;\n      left: ${40 - 20}px;\n    `}\n  }\n}`\n\nexport const Label = styled.span`\n    color: ${(props) => props.theme.colors.text}\n`\n","import React from 'react'\nimport { SwitchProps } from './types'\nimport * as S from './style'\n\nconst Switch: React.FC<SwitchProps> = (props: SwitchProps) => {\n  const {\n    value,\n    onChange,\n    labelLeft,\n    labelRight,\n    disabled\n  } = props\n\n  return (\n    <div>\n      <S.Container\n        disabled={disabled}\n        onClick={() => {\n          if (!disabled) {\n            onChange(!value)\n          }\n        }}\n      >\n        {labelLeft && <S.Label>{labelLeft}</S.Label>}\n        <S.Switcher\n          switched={value}\n          disabled={disabled}\n        />\n        {labelRight && <S.Label>{labelRight}</S.Label>}\n      </S.Container>\n    </div>\n  )\n}\n\nexport default Switch\n","import styled, { css } from 'styled-components'\nimport { GroupProps } from './types'\n\nexport const Container = styled.div<GroupProps>`\n    display: flex;\n    flex-direction: ${(props) => props.vertical === true ? 'column' : 'row'};\n    justify-content: space-between;\n    width: 100%;\n    min-height: 48px;\n    ${(props) => props.alignItems && css`\n        align-items: ${(props: GroupProps) => props.alignItems};\n    `}\n`\n","import React from 'react'\nimport * as S from './style'\nimport { GroupProps } from './types'\n\nconst Group: React.FC<GroupProps> = (props: GroupProps) => {\n  const { children, alignItems, vertical } = props\n  return (\n    <S.Container\n      alignItems={alignItems}\n      vertical={vertical}\n    >\n      {children}\n    </S.Container>\n  )\n}\n\nexport default Group\n","import styled from 'styled-components'\n\nexport const Container = styled.div`\n  padding-bottom: 16px;\n  min-height: 62px;\n`\n","import React from 'react'\nimport Switch from '../Switch'\nimport { QuizOptionsProps } from './types'\nimport { FaSun, FaMoon } from 'react-icons/fa'\nimport Group from '../Group'\nimport * as S from './style'\n\nconst QuizOptions: React.FC<QuizOptionsProps> = (props: QuizOptionsProps) => {\n  const {\n    theme,\n    language,\n    onChangeTheme,\n    onChangeLanguage\n  } = props\n\n  return (\n    <S.Container>\n      <Group vertical alignItems=\"center\">\n        <Switch\n          value={language === 'pt_BR'}\n          labelLeft={'EN'}\n          labelRight={'PT'}\n          disabled={false}\n          onChange={(value) => onChangeLanguage(value)}\n        />\n        <Switch\n          value={theme === 'dark'}\n          labelLeft={<FaSun />}\n          labelRight={<FaMoon />}\n          disabled={false}\n          onChange={(value) => onChangeTheme(value)}\n        />\n      </Group>\n    </S.Container>\n  )\n}\n\nexport default QuizOptions\n","import styled from 'styled-components'\n\nexport const Container = styled.button`\nwidth: 48px;\nheight: 48px;\n  text-decoration: none;\n  display: block;\n  padding: 15px;\n  font-family: ${(props) => props.theme.fonts.handheldtext};\n  font-size: 1rem;\n  font-weight: bold;\n  text-transform: uppercase;\n  color: #fff;\n  background-color: ${(props) => props.theme.colors.handheldSecondary};\n  border: none;\n  border-radius: 100%;\n  cursor: pointer;\n  box-shadow: 0px 4px 0px ${(props) => props.theme.colors.handheldSecondaryShadow};\n\n  &[disabled] {\n    cursor: not-allowed;\n    opacity: 0.8;\n    color: #d1d1d1;\n  }\n  \n  &:active{\n    box-shadow: 0px 2px 0px ${(props) => props.theme.colors.handheldSecondaryShadow};\n    position: relative;\n    top: 2px;\n}\n`\n","import React from 'react'\nimport { ButtonProps } from './types'\nimport * as S from './style'\n\nconst Button: React.FC<ButtonProps> = (props: ButtonProps) => {\n  const {\n    title,\n    disabled,\n    onClick\n  } = props\n\n  return (\n    <S.Container\n      title={title}\n      disabled={disabled}\n      onClick={onClick}\n    >\n      {title}\n    </S.Container>\n  )\n}\n\nexport default Button\n","import React from 'react'\nimport * as S from './style'\nimport { HandheldButtonGroupProps } from './types'\nimport QuizOptions from '../QuizOptions'\nimport Button from '../Button'\n\nconst HandheldButtonGroup: React.FC<HandheldButtonGroupProps> = (props: HandheldButtonGroupProps) => {\n  const {\n    theme,\n    language,\n    onChangeTheme,\n    onChangeLanguage,\n    onClickA,\n    onClickB\n  } = props\n\n  return (\n    <S.ButtonContainer>\n      <S.ButtonOptionsWrapper>\n        <QuizOptions\n          theme={theme}\n          language={language}\n          onChangeTheme={onChangeTheme}\n          onChangeLanguage={onChangeLanguage}\n          onClickA={() => onClickA}\n          onClickB={() => onClickB}\n        />\n      </S.ButtonOptionsWrapper>\n      <S.ButtonActionsWrapper>\n        <Button title=\"A\" onClick={onClickA} />\n        <Button title=\"B\" onClick={onClickB} />\n      </S.ButtonActionsWrapper>\n    </S.ButtonContainer>\n\n  )\n}\n\nexport default HandheldButtonGroup\n","import styled from 'styled-components'\n\nexport const HandheldScreen = styled.div`\n    height: 400px;\n    width: 318px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    box-shadow: inset 3px 3px rgba(0,0,0,0.15);\n    border: 8pt solid #292425;\n    border-top: none;\n    padding: 1rem;\n    margin-bottom: 46px;\n    margin-left: auto;\n    margin-right: auto;\n    background: ${(props) => props.theme.colors.handheldScreen};\n`\n","import styled from 'styled-components'\n\nexport const Container = styled.div`\n    width: 318px;\n    padding-top: 0.8rem;\n    padding-left: 0.8rem;\n    padding-right: 0.8rem;\n    padding-bottom: 0.5rem;\n    margin-bottom: 0;\n    margin-left: 1px;\n    margin-right: 1px;\n    text-align: left;\n    display: flex;\n    background-color: #292425;\n    & a {\n        font-style: italic;\n        font-size: 0.85rem;\n        text-decoration: none;\n        color: ${(props) => props.theme.colors.primary};\n    }\n`\n\nexport const Label = styled.div`\n    margin: 0;\n    font-size: 0.6rem;\n    color: #908a99;\n    font-family: 'Audiowide', cursive;\n`\n\nexport const Stripes = styled.div`\n    height: 0.7rem;\n    border-top: 2pt solid ${(props) => props.theme.colors.handheldButton};\n    border-bottom: 2pt solid ${(props) => props.theme.colors.handheldSecondary};\n    flex-grow: 1;\n    margin-left: 5px;\n    margin-right: 2px;\n    margin-top: 3px;\n`\n","import React from 'react'\nimport * as S from './styles'\n\nconst HandheldLink: React.FC = () => {\n  return (\n    <S.Container>\n      <S.Label>\n            Check the&nbsp;\n        <a href=\"https://github.com/douglaswcamargo/react-ts-trivia-game\" target=\"_blank\" rel=\"noopener noreferrer\" >\n                SOURCE CODE\n        </a>\n      </S.Label>\n      <S.Stripes />\n    </S.Container>\n  )\n}\n\nexport default HandheldLink\n","import React, { useContext } from 'react'\nimport { QuizContainerProps } from './types'\nimport { AppThemeContext } from '../../contexts/AppThemeProvider'\nimport { getLocalStorageItem } from '../../helpers'\nimport QuizWrapper from '../../components/Card'\nimport useToggleLanguage from '../../hooks/useToggleLanguage'\nimport HandheldButtonGroup from '../../components/HandheldButtonGroup'\nimport { HandheldScreen } from '../../components/HandheldScreen'\nimport HandheldLink from '../../components/HandheldLink'\n\nexport default function QuizContainer ({ children, onClickA, onClickB }: QuizContainerProps) {\n  const initialLanguage = getLocalStorageItem('quizLanguage') ?? 'en_US'\n  const [language, toggleLanguage] = useToggleLanguage(initialLanguage)\n  const { selectedTheme, setSelectedTheme } = useContext(AppThemeContext)\n\n  return (\n    <>\n      <QuizWrapper>\n        <HandheldLink />\n        <HandheldScreen>\n          {children}\n        </HandheldScreen>\n          <HandheldButtonGroup\n          theme={selectedTheme}\n          language={language}\n          onChangeTheme={setSelectedTheme}\n          onChangeLanguage={toggleLanguage}\n          onClickA={onClickA}\n          onClickB={onClickB}\n        />\n      </QuizWrapper>\n    </>\n  )\n}\n","import { useEffect, useState } from 'react'\nimport { setLocalStorageItem } from '../helpers'\nimport { useTranslation } from 'react-i18next'\n\nexport default function useToggleLanguage (initialLanguage: string) {\n  const [language, setLanguage] = useState(initialLanguage)\n  const { i18n } = useTranslation()\n\n  const toggleLanguage = async (isPt: boolean) => {\n    const selectedLang = isPt ? 'pt_BR' : 'en_US'\n    await i18n.changeLanguage(selectedLang)\n    setLanguage(selectedLang)\n  }\n\n  useEffect(() => setLocalStorageItem('quizLanguage', language), [language])\n\n  return [language, toggleLanguage] as const\n}\n","import styled from 'styled-components'\n\nconst Title = styled.h1`\n    color: ${(props) => props.theme.colors.text};\n    min-height: 30px;\n    font-family: ${(props) => props.theme.fonts.secondary};\n    font-size: 1.25rem;\n`\n\nexport default Title\n","import styled, {css, keyframes} from 'styled-components'\nimport { HintProps } from './types'\n\nconst hint = keyframes`\n    0% { opacity: 0; }\n    50% { opacity: .5; }\n    100% { opacity: 1; }\n`\nconst Hint = styled.p<HintProps>`\n    color: ${(props) => props.theme.colors.text};\n    font-family: ${(props) => props.theme.fonts.secondary};\n    font-size: 0.4rem;\n    text-align: center;\n    animation: ${hint} 600ms linear infinite;\n\n    ${(props) => !props.blink &&\n        css`\n            animation: none;\n        `\n    }\n`\n\nexport default Hint\n","import styled from 'styled-components'\n\nconst Text = styled.p`\n  font-family: ${(props) => props.theme.fonts.secondary};\n  color: ${(props) => props.theme.colors.text};\n  margin: 0;\n`\nexport default Text\n","import React from 'react'\nimport { useTranslation } from 'react-i18next'\nimport QuizContainer from '../../containers/QuizContainer'\nimport Title from '../../components/Title'\n// import * as S from './style'\nimport { useHistory } from 'react-router-dom'\nimport Hint from '../../components/Hint'\nimport Text from '../../components/Text'\n\nexport default function QuizHome () {\n  const { t } = useTranslation()\n  const history = useHistory()\n  const handleClickA = () => {\n    history.push(`${process.env.PUBLIC_URL}/quiz`)\n  }\n\n  const handleClickB = () => {\n    history.push(`${process.env.PUBLIC_URL}/quiz`)\n  }\n\n  return (\n    <QuizContainer\n      onClickA={handleClickA}\n      onClickB={handleClickB}\n    >\n      <Title>{t('quiz.homeTitle')}</Title>\n      <Text>{t('quiz.homeSubTitle')}</Text>\n      <Text>{t('quiz.homeDescription')}</Text>\n      <Text>{t('quiz.homeChallenge')}</Text>\n      <Hint blink>{t('quiz.homeButtonStart')}</Hint>\n    </QuizContainer>\n  )\n}\n","import styled from 'styled-components'\n\nexport const Question = styled.p`\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    font-family: ${(props) => props.theme.fonts.secondary};\n    line-height: 1.4;\n    font-size: 0.8rem;\n    color: ${(props) => props.theme.colors.text};\n    padding: 8px;\n    border: 1pt solid ${(props) => props.theme.colors.text};\n    border-radius: 4px;\n    height: 260px;\n    width: 260px;\n    margin: 20px auto auto;\n    word-break: break-word;\n`\n\nexport const Counter = styled.div`\n    font-family: ${(props) => props.theme.fonts.secondary};\n    padding: 30px;\n    font-size: 1.1rem;\n`\n","import React from 'react'\nimport * as S from './style'\nimport he from 'he'\nimport Text from '../Text'\nimport { useTranslation } from 'react-i18next'\nimport { QuizQuestionProps } from './types'\n\nconst QuizQuestion: React.FC<QuizQuestionProps> = (props: QuizQuestionProps) => {\n  const { question, currentQuestion, totalQuestions } = props\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <S.Question>\n        {he.decode(question)}\n      </S.Question>\n      <S.Counter>\n        <Text>{`${currentQuestion} ${t('quiz.quizCounterPreposition')} ${totalQuestions}`} </Text>\n      </S.Counter>\n    </>\n  )\n}\n\nexport default QuizQuestion\n","import styled, { keyframes } from 'styled-components'\n\nconst spinner = keyframes`\n    0% { transform: rotate(0deg); }\n    100% { transform: rotate(360deg); }\n`\n\nexport const Spinner = styled.div`\n  width: 2.5rem;\n  height: 2.5rem;\n  border-top-color: ${(props) => props.theme.colors.text};\n  border-left-color: ${(props) => props.theme.colors.text};\n  animation: ${spinner} 600ms linear infinite;\n  border-bottom-color: transparent;\n  border-right-color: transparent;\n  border-style: solid;\n  border-width: 3px;\n  border-radius: 50%;  \n  box-sizing: border-box;\n  display: inline-block;\n  vertical-align: middle;\n  margin: auto;\n`\n\nexport default Spinner\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useTranslation } from 'react-i18next'\nimport { useHistory } from 'react-router-dom'\nimport { fetchQuestions } from '../../store/ducks/questions/actions'\nimport { answerQuestion, resetResults } from '../../store/ducks/answers/actions'\nimport { AppState } from '../../store/types'\nimport QuizQuestion from '../../components/QuizQuestion'\nimport Spinner from '../../components/Spinner'\nimport { Answer } from '../../store/ducks/answers/types'\nimport Title from '../../components/Title'\nimport QuizContainer from '../QuizContainer'\nimport Hint from '../../components/Hint'\n\nexport default function QuizQuestionContainer () {\n  const questions = useSelector((state: AppState) => state.questions)\n  const [currentQuestion, setCurrentQuestion] = useState(0)\n  const { t } = useTranslation()\n  const dispatch = useDispatch()\n  const history = useHistory()\n\n  const handleAnswer = (answer: string) => {\n    const answerObj: Answer = {\n      question: questions.data[currentQuestion].question,\n      correct: answer === questions.data[currentQuestion].correct_answer\n    }\n\n    dispatch(answerQuestion(answerObj))\n    if (currentQuestion + 1 < questions.data.length) {\n      setCurrentQuestion(currentQuestion + 1)\n    } else {\n      history.push(`${process.env.PUBLIC_URL}/results`)\n    }\n  }\n\n  useEffect(() => {\n    dispatch(fetchQuestions())\n    dispatch(resetResults())\n  }, [dispatch])\n\n  const handleClickA = () => {\n    if (!questions.loading) {\n      handleAnswer('True')\n    }\n  }\n\n  const handleClickB = () => {\n    if (!questions.loading) {\n      handleAnswer('False')\n    }\n  }\n\n  return (\n    <QuizContainer\n      onClickA={handleClickA}\n      onClickB={handleClickB}\n    >\n      {questions.loading\n        ? <Spinner/>\n        : (\n          <>\n            <Title as=\"h2\">{questions.data[currentQuestion].category}</Title>\n            <QuizQuestion\n              totalQuestions={questions.data.length}\n              currentQuestion={currentQuestion + 1}\n              question={questions.data[currentQuestion].question}\n            />\n            <Hint>{t('quiz.quizHintA')}</Hint>\n            <Hint>{t('quiz.quizHintB')}</Hint>\n          </>\n        )\n      }\n    </QuizContainer>\n  )\n}\n","import { action } from 'typesafe-actions'\nimport { Answer, AnswersTypes } from './types'\n\nexport const answerQuestion = (answer: Answer) => {\n  return action(AnswersTypes.ANSWER_QUESTION, answer)\n}\n\nexport const resetResults = () => {\n  return action(AnswersTypes.RESET_ANSWERS)\n}\n","import React from 'react'\nimport QuizQuestionContainer from '../../containers/QuizQuestionsContainer'\n\nexport default function Quiz () {\n  return <QuizQuestionContainer />\n}\n","import styled from 'styled-components'\n\nexport const Wrapper = styled.div`\n    font-family: ${(props) => props.theme.fonts.secondary};\n    min-height: 370px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n`\nexport const List = styled.ul`\n    overflow: auto;\n    list-style: none;\n    padding: 0.5rem;\n    &::-webkit-scrollbar-track\n    {\n        -webkit-box-shadow: inset 0 0 4px rgba(0,0,0,0.2);\n        background-color: ${(props) => props.theme.colors.handheldScreen};\n    }\n    \n    &::-webkit-scrollbar\n    {\n        width: 4px;\n        background-color: ${(props) => props.theme.colors.handheldScreen};\n    }\n    \n    &::-webkit-scrollbar-thumb\n    {\n        background-color: ${(props) => props.theme.colors.text};\n        opacity: 0.8;\n    }\n`\n\nexport const ListItem = styled.li<{correct: boolean}>`\n    display: flex;\n    justify-content: space-between;\n    font-size: 0.6rem;\n    padding-left: 1em;\n    padding-right: 1em;\n    margin-bottom: 1rem;\n    text-align: left;\n    color: ${(props) => props.correct ? props.theme.colors.success : props.theme.colors.error};\n    word-break: break-all;\n`\n\nexport const Icon = styled.span`\n    font-size: 1.2rem;\n    margin-right: 0.5rem;\n`\n\nexport const QuestionText = styled.span`\n    padding-bottom: 1rem;\n    border-bottom: 1pt dashed ${(props) => props.theme.colors.text};\n`\n\nexport const Score = styled.h1`\n    color: ${(props) => props.theme.colors.text};\n`\n","import React from 'react'\nimport he from 'he'\nimport { useTranslation } from 'react-i18next'\nimport { useSelector } from 'react-redux'\nimport { Redirect, useHistory } from 'react-router-dom'\nimport { FaCheckSquare, FaRegWindowClose } from 'react-icons/fa'\nimport QuizContainer from '../../containers/QuizContainer'\nimport Text from '../../components/Text'\nimport Hint from '../../components/Hint'\nimport { AppState } from '../../store/types'\nimport * as S from './style'\n\nexport default function QuizResults () {\n  const { t } = useTranslation()\n  const answers = useSelector((state: AppState) => state.answers.data)\n  const correctAnswers = answers.filter((answer) => answer.correct)\n  const history = useHistory()\n\n  if (answers.length === 0) {\n    return <Redirect push to={`${process.env.PUBLIC_URL}/`} />\n  }\n\n  const handleClick = () => history.push(`${process.env.PUBLIC_URL}/`)\n\n  return (\n    <QuizContainer\n      onClickA={handleClick}\n      onClickB={handleClick}\n    >\n      <S.Wrapper>\n        <Text>{t('quiz.resultsTitle')}</Text>\n        <S.Score>{correctAnswers.length}/{answers.length}</S.Score>\n        <S.List>\n          {answers.map((answer, key) => {\n            return (\n              <S.ListItem key={key} correct={answer.correct}>\n                <S.Icon>{answer.correct ? <FaCheckSquare /> : <FaRegWindowClose />}</S.Icon>\n                <S.QuestionText>{he.decode(answer.question)}</S.QuestionText>\n              </S.ListItem>\n            )\n          })}\n        </S.List>\n        <Hint blink>{t('quiz.resultsHint')}</Hint>\n      </S.Wrapper>\n    </QuizContainer>\n  )\n}\n","import React from 'react'\nimport { useTranslation } from 'react-i18next'\nimport Title from '../../components/Title'\n\nexport default function QuizHome () {\n  const { t } = useTranslation()\n\n  return <Title>{t('general.notFound')}</Title>\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport QuizHome from '../pages/QuizHome'\nimport QuizQuestions from '../pages/QuizQuestions'\nimport QuizResults from '../pages/QuizResults'\nimport NotFound from '../pages/NotFound'\n\nexport default function Routes () {\n  return (\n    <Switch>\n      <Route exact path={`${process.env.PUBLIC_URL}/`} component={QuizHome} />\n      <Route path={`${process.env.PUBLIC_URL}/quiz`} component={QuizQuestions} />\n      <Route path={`${process.env.PUBLIC_URL}/results`} component={QuizResults} />\n      <Route component={NotFound} />\n    </Switch>\n  )\n}\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter } from 'react-router-dom'\nimport store from './store'\nimport './i18n/'\nimport Routes from './routes/routes'\nimport AppThemeProvider from './contexts/AppThemeProvider'\n\nfunction App () {\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <AppThemeProvider>\n          <Routes />\n        </AppThemeProvider>\n      </BrowserRouter>\n    </Provider>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}